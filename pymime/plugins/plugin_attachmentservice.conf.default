[default]
# This function is called to store the attachments when action=store.
# The needed packages and modules must be importable.
# The function returns a string that is appended to the message.
# Default value: pymime.integration.dummy_store
# Other Options pymime.integration.{flat_store,django_store} 
store-function=pymime.integration.dummy_store

# Additional options to pass to the store-function. Can be of the following python
# structures: string, number, tuple, list, dict, boolean, and None.
# Default value: None
# Options for flat_store: {"salt": "", "path": "", "baseurl": "", "text_after": ""}
#    salt: Salt for SHA1-Hashing of Attachments
#    path: Here the Attachments are stored
#    baseurl: URL where path is accesible
#    text_after: text to insert as footer in the mail
#    none of these options is mandatory
# Options for django_store: {"project-path": "", "settings-module": "", "baseurl": ""}
#    project-path: Path to the django-project. Is appended to the PYTHONPATH
#    settings-module: Path to the importable settings module
#    baseurl: URL where the django installation is accessible
#    At least one of the project-path and settings-module options is needed.
store-function-options=None


[policy-default]
# Allowed values: allow, deny. allow means that the mime and ext options
# work as a whitelist, deny means blacklisting. Default value: allow
policy=allow

# Possible actions for allowed attachments:
# keep: do nothing
# store: Remove the Attachment from the mail and use the attachment service
# to store the attachment.
# Default value: keep
action=keep

# Comma-seperated list of allowed content-types. Matches if the Content-Type
# header starts with any of the entries in the list.
# Default value: application/vnd.oasis.opendocument.,application/x-zip,application/pdf
mime=application/vnd.oasis.opendocument.,application/x-zip,application/pdf

# Comma-seperated list of allowed file extensions. Matches if the Content-Disposition
# filename param or the Content-Type name param ends with any of the entries in the list.
# Default value: .ods,.odt,.odp,.odg,.pdf
ext=.ods,.odt,.odp,.odg,.pdf

# Maximum allowed size of the overall mail, including encoding overhead.
# Allowed extensions: K/M/G
# Default value: 5M
max_size=5M

# Policy options to pass to the store-function. Can be of the following python
# structures: string, number, tuple, list, dict, boolean, and None.
# Default value: None
# Options for django_store: {"max-age": 30}
#    max-age: Maximum time (in days) attachments are stored before they are expired.
store-function-options=None


[map]
# This section is used to map To: headers to policies.
# <destination-address>=<policy-name>
# e.g. frob@foo.bar=foobar
# this needs a section [policy-foobar] analogous to [policy-default].
# Unset values in [policy-foobar] will be inherited from [policy-default]